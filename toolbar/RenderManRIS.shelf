<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="RenderManRIS" label="RenderMan RIS">
    <memberTool name="rman_pxrrectlight"/>
    <memberTool name="rman_pxrdisklight"/>
    <memberTool name="rman_pxrdistantlight"/>
    <memberTool name="rman_pxrspherelight"/>
    <memberTool name="rman_pxraovlight"/>
    <memberTool name="rman_pxrdomelight"/>
    <memberTool name="rman_pxrportallight"/>
    <memberTool name="rman_pxrenvdaylight"/>
    <memberTool name="rman_pxrmeshlight"/>
    <memberTool name="rman_risnet"/>
    <memberTool name="rman_pxrsurface"/>
    <memberTool name="rman_pxrmarschner"/>
    <memberTool name="rman_pxrvolume"/>
    <memberTool name="rman_ris"/>
  </toolshelf>

  <tool name="rman_pxrdistantlight" label="Distant Light" icon="OBJ_light_pxrdistant.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrDistantLight</helpURL>
    <script scriptType="python"><![CDATA[import objecttoolutils

objecttoolutils.genericCameraLightTool(kwargs, 'pxrdistantlight')]]></script>
  </tool>

  <tool name="rman_pxrdomelight" label="Dome Light" icon="OBJ_light_pxrdome.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrDomeLight</helpURL>
    <script scriptType="python"><![CDATA[import objecttoolutils

objecttoolutils.genericTool(kwargs, 'pxrdomelight')]]></script>
  </tool>

  <tool name="rman_pxrportallight" label="Portal Light" icon="OBJ_light_pxrportal.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrPortalLight</helpURL>
    <script scriptType="python"><![CDATA[import toolutils
import objecttoolutils

scene_viewer = toolutils.sceneViewer()
targets = scene_viewer.selectObjects(
             prompt = "Select a PxrDomeLight node to parent and Press Enter to complete",
             allow_multisel = False,
             allowed_types = ("light",))
                
if len(targets) > 0:
    target = targets[0]
    if target.type().name() == 'pxrdomelight':
        portal_light = hou.node("/obj").createNode("pxrportallight")       
        portal_light.setInput(0, target)
    else:
        raise hou.NodeError("Selected node '%s' is not a PxrDomeLight." % target)
]]></script>
  </tool>

  <tool name="rman_pxrrectlight" label="Rect Light" icon="OBJ_light_pxrrect.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrRectLight</helpURL>
    <script scriptType="python"><![CDATA[import objecttoolutils

objecttoolutils.genericCameraLightTool(kwargs, 'pxrrectlight')]]></script>
  </tool>

  <tool name="rman_pxrdisklight" label="Disk Light" icon="OBJ_light_pxrdisk.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrDiskLight</helpURL>
    <script scriptType="python"><![CDATA[import objecttoolutils

objecttoolutils.genericCameraLightTool(kwargs, 'pxrdisklight')]]></script>
  </tool>

  <tool name="rman_pxrspherelight" label="Sphere Light" icon="OBJ_light_pxrsphere.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrSphereLight</helpURL>
    <script scriptType="python"><![CDATA[import objecttoolutils

objecttoolutils.genericCameraLightTool(kwargs, 'pxrspherelight')]]></script>
  </tool>

  <tool name="rman_pxrenvdaylight" label="Env Day Light" icon="OBJ_light_pxrenvday.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrEnvDayLight</helpURL>
    <script scriptType="python"><![CDATA[import objecttoolutils

objecttoolutils.genericTool(kwargs, 'pxrenvdaylight')]]></script>
  </tool>

  <tool name="rman_pxraovlight" label="AOV Light" icon="OBJ_light_pxraov.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrAovLight</helpURL>
    <script scriptType="python"><![CDATA[import objecttoolutils

objecttoolutils.genericCameraLightTool(kwargs, 'pxraovlight')]]></script>
  </tool>

  <tool name="rman_risnet" label="RIS Shader Network" icon="COMMON_ris">
    <helpURL>operator:Shop/risnet</helpURL>
    <script scriptType="python"><![CDATA[hou.node("/shop").createNode("risnet")]]></script>
  </tool>

  <tool name="rman_pxrsurface" label="Surface" icon="VOP_bxdf_pxrsurface.png">
    <helpURL>operator:Vop/pxrsurface</helpURL>
    <script scriptType="python"><![CDATA[# Create pxrsurface

# Check if risnet exists
risnet = next((n for n in hou.node("/shop").children() if \
             n.type().name() == "risnet"), None)
if risnet is None:
    risnet = hou.node("/shop").createNode("risnet")
        
# Then add pxrsurface inside risnet
node = risnet.createNode("pxrsurface")

]]></script>
  </tool>

  <tool name="rman_pxrvolume" label="Volume" icon="VOP_bxdf_pxrvolume.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrVolume</helpURL>
    <script scriptType="python"><![CDATA[# Create pxrvolume

# Check if risnet exists
risnet = next((n for n in hou.node("/shop").children() if \
             n.type().name() == "risnet"), None)
if risnet is None:
    risnet = hou.node("/shop").createNode("risnet")
        
# Then add pxrvolume inside risnet
node = risnet.createNode("pxrvolume")]]></script>
  </tool>

  <tool name="rman_pxrmarschner" label="Marschner Hair" icon="VOP_bxdf_pxrmarschner.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrMarschner</helpURL>
    <script scriptType="python"><![CDATA[# Create pxrmarschnerhair

# Check if risnet exist
risnet = next((n for n in hou.node("/shop").children() if \
             n.type().name() == "risnet"), None)
if risnet is None:
    risnet = hou.node("/shop").createNode("risnet")
        
# Then add pxrmarschner inside risnet
node = risnet.createNode("pxrmarschnerhair")]]></script>
  </tool>

  <tool name="rman_pxrmeshlight" label="Mesh Light" icon="OBJ_light_pxrmesh.png">
    <helpURL>https://rmanwiki.pixar.com/display/REN/PxrMeshLight</helpURL>
        <script scriptType="python"><![CDATA[
import toolutils
import objecttoolutils

scene_viewer = toolutils.sceneViewer()
targets = scene_viewer.selectObjects(
                prompt = toolutils.selectionPrompt(hou.objNodeTypeCategory()),
                allow_multisel = False,
                allowed_types = ("geo",))
newnode = objecttoolutils.genericTool(kwargs, 'pxrmeshlight', 'pxrmeshlight1', False)
if len( targets ) > 0:
    target = targets[0]
    target_path = target.path()
    newnode.setWorldTransform( target.worldTransform() )
    newnode.parm("ri_lightgeo").set( target_path )
    target.setDisplayFlag( False )]]></script>
  </tool>

  <tool name="rman_ris" label="RIS ROP" icon="ROP_rman">
    <helpURL>operator:Driver/ris</helpURL>
    <script scriptType="python"><![CDATA[ris_rop = hou.node("/out").createNode("ris")

# Look for pathtracer integrator
risnet = next((n for n in hou.node("/shop").children() if \
             n.type().name() == "risnet"), None)
             
if risnet is None:
    risnet = hou.node("/shop").createNode("risnet")  
    
pt = next((n for n in risnet.children() if \
             n.type().name() == "pxrpathtracer"), None)
            
if pt is None:
    pt = risnet.createNode("pxrpathtracer")

ris_rop.parm('shop_integratorpath').set(pt.path())
]]></script>
  </tool>
</shelfDocument>
